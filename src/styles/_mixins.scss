// ======================= //
// ==== MEDIA QUERIES ==== //
// ======================= //

$breakpoints: (
	'small': (min-width: 576px),
	'medium': (min-width: 768px),
	'large': (min-width: 1024px),
	'huge': (min-width: 1300px),
	'hd': (min-width: 1920px)
);

@mixin respond-to($breakpoint) {
	$raw-query: map-get($breakpoints, $breakpoint);

	@if $raw-query {
		$query: if(
			type-of($raw-query) == 'string',
			unquote($raw-query),
			inspect($raw-query)
		);

		@media #{$query} {
			@content;
		}
	} @else {
		@error 'No value found for `#{$breakpoint}`. '
		+ 'Please make sure it is defined in `$breakpoints` map.';
	}
}

// ======================= //
// ====== FUNCTIONS ====== //
// ======================= //

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function getPt($number) {
  @return $number * (1em / 1000);
}

// ======================= //
// ======= HELPERS ======= //
// ======================= //

// Don't use this without a good visual replacement
@mixin noOutline {
  outline: none;
  &::-moz-focus-inner {
    border: 0;
  }
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

@mixin center {
  margin-left: auto;
  margin-right: auto;
}

@mixin absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


@mixin colorFilter($color, $zIndex: 0) {
  &::before {
    background: $color;
    z-index: $zIndex;
    @include pseudo;
    @include absoluteFill;
  }
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

@mixin absoluteFill {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
